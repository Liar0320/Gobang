给chessboard绑定点击事件;

因为我们的棋盘式根据宽度来保持横纵比的，所以每一个网格的大小在不同分辨率下是不一样的。因此对应的棋子大小也应自适应。
//获取canvas大小，根据640的宽度进行等比缩放。缩放对象为棋盘（棋盘大小为600*600）和棋子（35*35）;
获取chessboard大小，因为宽度自适应所以高度 = 宽度 赋值操作 保持棋盘大小一致，根据600的宽度进行等比缩放。棋子（35*35），实际棋盘（275*375），棋盘的留白（25*25）;
进行抽象棋盘的计算。
	棋盘大小 行0-14 列0-14。共有225个交叉点;
	turn = 1 为白色 2 为黑色;
	abstractBoard.containt =	[(0,0),(1,0  ),(2,0 ),(3,0 ).....(14,0 )]     ---->[status] status = 0为没有棋子，1为白色，2为黑色。
								[(0,1),(1,1  ),(2,1 ),(3,1 ).....(14,1 )] 										
								[................................(..,14)]
								[(0,14),(1,14),(2,14),(3,14).....(14,14)] 
	abstractBoard.boardCell = abstractBoard.size/15;
	//boardCell = abstractBoard.size/15;
	进行落子位置的计算。获取鼠标点击的位置，减去棋盘的留白，Math.round(x/boardCell);Math.round(y/boardCell);
	获取二维坐标(rx,ry),如果该坐标为空（0）则置为当前选手(turn)。如果不是则不进行操作。
	进行五子棋胜负逻辑运算 如果成立返回true ， 游戏结束。
						   如果失败返回false， 进行选手的轮换。

	
游戏拆解
	人物
	实例化一个人物；
	该人物具有
		click事件，绑定的对象为棋盘。事件名为落子。
	
	gameManager:
		具有gameInit事件，即游戏初始化。棋盘初始化(chessinit)， 人物初始化(人物实力化)。
		具有turnOver事件，即当前回合结束，接收一个 fallchess ，进行step valid ，进行棋盘事件的切换;
		具有creatChess事件，即渲染棋子位置。
		具有gameOver事件，即游戏结束。
	
	
	
	


